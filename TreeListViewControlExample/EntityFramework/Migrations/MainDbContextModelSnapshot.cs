// <auto-generated />
using System;
using EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntityFramework.Migrations
{
    [DbContext(typeof(MainDbContext))]
    partial class MainDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("EntityFramework.DTOs.ObjectCollectionDTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Comments")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentObjectCollectionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentProjectId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentSessionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentTaskId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParentObjectCollectionId");

                    b.HasIndex("ParentProjectId");

                    b.HasIndex("ParentSessionId");

                    b.HasIndex("ParentTaskId");

                    b.ToTable("ObjectCollections");
                });

            modelBuilder.Entity("EntityFramework.DTOs.ProjectDTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Comments")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentObjectCollectionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentProjectId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentSessionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentTaskId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParentObjectCollectionId");

                    b.HasIndex("ParentProjectId");

                    b.HasIndex("ParentSessionId");

                    b.HasIndex("ParentTaskId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("EntityFramework.DTOs.SessionDTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Comments")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentObjectCollectionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentProjectId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentSessionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentTaskId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SessionName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParentObjectCollectionId");

                    b.HasIndex("ParentProjectId");

                    b.HasIndex("ParentSessionId");

                    b.HasIndex("ParentTaskId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("EntityFramework.DTOs.TaskDTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Comments")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentObjectCollectionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentProjectId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentSessionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentTaskId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaskName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParentObjectCollectionId");

                    b.HasIndex("ParentProjectId");

                    b.HasIndex("ParentSessionId");

                    b.HasIndex("ParentTaskId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("EntityFramework.DTOs.ObjectCollectionDTO", b =>
                {
                    b.HasOne("EntityFramework.DTOs.ObjectCollectionDTO", "ParentObjectCollection")
                        .WithMany()
                        .HasForeignKey("ParentObjectCollectionId");

                    b.HasOne("EntityFramework.DTOs.ProjectDTO", "ParentProject")
                        .WithMany()
                        .HasForeignKey("ParentProjectId");

                    b.HasOne("EntityFramework.DTOs.SessionDTO", "ParentSession")
                        .WithMany()
                        .HasForeignKey("ParentSessionId");

                    b.HasOne("EntityFramework.DTOs.TaskDTO", "ParentTask")
                        .WithMany()
                        .HasForeignKey("ParentTaskId");

                    b.Navigation("ParentObjectCollection");

                    b.Navigation("ParentProject");

                    b.Navigation("ParentSession");

                    b.Navigation("ParentTask");
                });

            modelBuilder.Entity("EntityFramework.DTOs.ProjectDTO", b =>
                {
                    b.HasOne("EntityFramework.DTOs.ObjectCollectionDTO", "ParentObjectCollection")
                        .WithMany("ProjectList")
                        .HasForeignKey("ParentObjectCollectionId");

                    b.HasOne("EntityFramework.DTOs.ProjectDTO", "ParentProject")
                        .WithMany("ProjectList")
                        .HasForeignKey("ParentProjectId");

                    b.HasOne("EntityFramework.DTOs.SessionDTO", "ParentSession")
                        .WithMany("ProjectList")
                        .HasForeignKey("ParentSessionId");

                    b.HasOne("EntityFramework.DTOs.TaskDTO", "ParentTask")
                        .WithMany("ProjectList")
                        .HasForeignKey("ParentTaskId");

                    b.Navigation("ParentObjectCollection");

                    b.Navigation("ParentProject");

                    b.Navigation("ParentSession");

                    b.Navigation("ParentTask");
                });

            modelBuilder.Entity("EntityFramework.DTOs.SessionDTO", b =>
                {
                    b.HasOne("EntityFramework.DTOs.ObjectCollectionDTO", "ParentObjectCollection")
                        .WithMany("SessionList")
                        .HasForeignKey("ParentObjectCollectionId");

                    b.HasOne("EntityFramework.DTOs.ProjectDTO", "ParentProject")
                        .WithMany("SessionList")
                        .HasForeignKey("ParentProjectId");

                    b.HasOne("EntityFramework.DTOs.SessionDTO", "ParentSession")
                        .WithMany("SessionList")
                        .HasForeignKey("ParentSessionId");

                    b.HasOne("EntityFramework.DTOs.TaskDTO", "ParentTask")
                        .WithMany("SessionList")
                        .HasForeignKey("ParentTaskId");

                    b.Navigation("ParentObjectCollection");

                    b.Navigation("ParentProject");

                    b.Navigation("ParentSession");

                    b.Navigation("ParentTask");
                });

            modelBuilder.Entity("EntityFramework.DTOs.TaskDTO", b =>
                {
                    b.HasOne("EntityFramework.DTOs.ObjectCollectionDTO", "ParentObjectCollection")
                        .WithMany("TaskList")
                        .HasForeignKey("ParentObjectCollectionId");

                    b.HasOne("EntityFramework.DTOs.ProjectDTO", "ParentProject")
                        .WithMany("TaskList")
                        .HasForeignKey("ParentProjectId");

                    b.HasOne("EntityFramework.DTOs.SessionDTO", "ParentSession")
                        .WithMany("TaskList")
                        .HasForeignKey("ParentSessionId");

                    b.HasOne("EntityFramework.DTOs.TaskDTO", "ParentTask")
                        .WithMany("TaskList")
                        .HasForeignKey("ParentTaskId");

                    b.Navigation("ParentObjectCollection");

                    b.Navigation("ParentProject");

                    b.Navigation("ParentSession");

                    b.Navigation("ParentTask");
                });

            modelBuilder.Entity("EntityFramework.DTOs.ObjectCollectionDTO", b =>
                {
                    b.Navigation("ProjectList");

                    b.Navigation("SessionList");

                    b.Navigation("TaskList");
                });

            modelBuilder.Entity("EntityFramework.DTOs.ProjectDTO", b =>
                {
                    b.Navigation("ProjectList");

                    b.Navigation("SessionList");

                    b.Navigation("TaskList");
                });

            modelBuilder.Entity("EntityFramework.DTOs.SessionDTO", b =>
                {
                    b.Navigation("ProjectList");

                    b.Navigation("SessionList");

                    b.Navigation("TaskList");
                });

            modelBuilder.Entity("EntityFramework.DTOs.TaskDTO", b =>
                {
                    b.Navigation("ProjectList");

                    b.Navigation("SessionList");

                    b.Navigation("TaskList");
                });
#pragma warning restore 612, 618
        }
    }
}
